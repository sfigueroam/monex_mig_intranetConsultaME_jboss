/*
 * File: GeneraLibroContabmeResult.java  2008/09/02 15:05:55
 * User: Daniel Hernandez N. (Tesoreria General de la Republica)
 *
 * This file was generated by "OBCOM SQL Wizard" version 5.1.236.
 * Copyright (c) OBCOM INGENIERIA S.A. (Chile) All rights reserved.
 * OBCOM PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 * DO NOT EDIT THIS FILE <<Signature:Sg6dnmS2miIAjLxPu8l123>>.
 */

package cl.tesoreria.monex.pkgconsultasmonex;

import java.math.BigDecimal;
import javax.sql.RowSet;

/**
 * Output parameters of procedure "PKG_CONSULTAS_MON_EX.GENERA_LIBRO_CONTABME".
 */
public class GeneraLibroContabmeResult implements java.io.Serializable
{
    private static final long serialVersionUID = 1L;
    private BigDecimal myCodout;
    private String myArchivo1;
    private RowSet[] myRowSets;

    /**
     * Constructor.
     */
    public GeneraLibroContabmeResult()
    {
    }

    /**
     * Returns the value of the "Codout" field.
     */
    public BigDecimal getCodout()
    {
        return myCodout;
    }

    /**
     * Changes the value of the "Codout" field.
     */
    public void setCodout(BigDecimal value)
    {
        myCodout = value;
    }

    /**
     * Returns the value of the "Archivo1" field.
     */
    public String getArchivo1()
    {
        return myArchivo1;
    }

    /**
     * Changes the value of the "Archivo1" field.
     */
    public void setArchivo1(String value)
    {
        myArchivo1 = value;
    }

    /**
     * Changes the value of the "RowSets" field.
     */
    void setRowSets(RowSet[] value)
    {
        myRowSets = value;
    }

    /**
     * Returns the value of the "RowSetCount" field.
     */
    public int getRowSetCount()
    {
        return (myRowSets != null) ? myRowSets.length : 0;
    }

    /**
     * Returns the "RowSet" at the specified index.
     */
    public RowSet getRowSet(int index)
    {
        if (index < 0 || index >= getRowSetCount())
            throw new ArrayIndexOutOfBoundsException(index);
        return myRowSets[index];
    }
}
